// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@unique([provider, providerAccountId])
}
 
model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
 
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}
 
model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime
 
  @@unique([identifier, token])
}

model AdvertGuild {
  id              String @id
  name            String
  durationLimit   DateTime?
  songs           AdvertSong[]
  users           AdvertUser[]
  adverts         Advert[]
}

model AdvertSong {
  id          String @id @default(cuid())
  guild       AdvertGuild @relation(fields: [guilId], references: [id], onDelete: Cascade)
  guilId      String
  duration    DateTime?
  title       String
  path        String @unique
  createAt    DateTime @default(now())
  author      AdvertUser @relation(fields: [authorId], references: [id])
  authorId    String
  adverts     Advert[]
}

model AdvertUser {
  id        String @id
  name      String
  guilds    AdvertGuild[]
  songs     AdvertSong[]
  adverts   Advert[]
}

model Advert {
  id        String @id @default(cuid())
  user      AdvertUser @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  guild     AdvertGuild @relation(fields: [guildId], references: [id], onDelete: Cascade)
  guildId   String
  song      AdvertSong  @relation(fields: [songId], references: [id], onDelete: Cascade)
  songId    String
}

